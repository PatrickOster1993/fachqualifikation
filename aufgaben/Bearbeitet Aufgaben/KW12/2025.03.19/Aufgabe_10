import random

# Kursdaten erstellen
#kurse = [random.uniform(75, 150) for _ in range(20)]
#print(kurse)


#kurse = [0]
#for _ in range(20):
#    kurse.append(random.randint(75, 150))

KURS_LEN = 20
kurse = []
i = 0

while i < 20:
    kurse.append(random.randint(75, 150))
    i += 1

print(kurse)

# A: Durchschnittsberechnung:

stock_sum = 0
#stock_len = 0 #wir kennen die länge deswegen neben wir oben  KURS_LEN = 20 wenn wir sie nicht kennen würde würden wir  stock_sum = 0 nehmen

for kurs in kurse:
    kurse_sum += kurs #äquivalent zu "kurs_sum = kurs_sum + kurs"

durchschnitt = kurs_sum /  KURS_LEN

print("Durschnitt. Aktienkurs: ", durchschnitt)

#B: Höchster uund niedrigster Kurs  im Monat:
kurs_max = kurse[0]
kurs_min = kurse[0]

for kurs in kurse:
    if  kurs > kurs_max:
        kurs_max = kurs
    elif kurs < kurs_min:
        kurs_min = kurs
print("min. Kurs: ", kurs_min, "Max. Kurs: ", kurs_max)

#alternative schreibweise kürzer wäre die leider falsch ist frage  chatgpt nochmals da der max 
#for kurs in kurse:
#    if  kurs >= kurs_max:
#        kurs_max = kurs
#    else:
#        kurs_min = kurs
#print("min. Kurs: ", kurs_min, "Max. Kurs: ", kurs_max)


# C:
print("Aktuelle Kursdaten: ", kurse)

rising_days = 0 

while i < (KURS_LEN - 1):
    aktueller_kurs = kurse[i]
    naechster_kurs = kurse[i + 1]
    if aktueller_kurs < naechster_kurs:
        anstieg_tage += 1    
    i  += 1

print  ("Anzahl Tage an denen Kurs gestiegen: ", anstieg_tage)


# D: Die anzahl der Tag an dennen der kurs gefallen ist.
for i in range(1, KURS_LEN):
    if kurse[i] < kurse[i - 1]:
        abfall_tage += 1

print(f"Anzahl Tage, an denen der Kurs gefallen ist: {abfall_tage}")

# E: Finden Sie den Tag, an dem der Kurs  am stärksten gestiegen ist:

i = 0
max_anstiegst_tag = 0
max_anstieg = 0

while i < (KURS_LEN - 1):
    aktueller_kurs = kurse[i]
    naechster_kurs = kurse[i + 1]
    aktueller_anstieg = naechster_kurs - aktueller_kurs
    if aktueller_kurs > max_anstieg:
        max_anstieg = aktueller_anstieg
        max_anstieg_tage += 1    
    i  += 1

print("Max. Anstiegstag: ", max_anstiegst_tag)